mod all_your_base;
mod allergies;
mod alphamettics;
mod async_channels;
mod binary_search;
mod borrowing_functions;
mod borrowing_match;
mod box_basics;
mod catch_unwind;
mod cell;
mod cell_cache;
mod common;
mod complex;
mod custom_iterator;
mod dot_dsl;
mod double_linkedlist;
mod dyn_trait;
mod grade_school;
mod isbn_verifier;
mod let_ref_mut;
mod linked_list;
mod linked_list2;
mod match_ref;
mod mem_introspection;
mod mutex_basics;
mod p1;
mod p100;
mod p101;
mod p104;
mod p108;
mod p1094;
mod p110;
mod p111;
mod p112;
mod p1140;
mod p1217;
mod p1221;
mod p19;
mod p2;
mod p20;
mod p206;
mod p21;
mod p224;
mod p23;
mod p234;
mod p24;
mod p2432;
mod p3;
mod p357;
mod p363;
mod p4;
mod p495;
mod p5;
mod p61;
mod p621;
mod p766;
mod p82;
mod p83;
mod p9;
mod p94;
mod p969;
mod panic_unwinding;
mod pascals_triangle;
mod pig_latin;
mod rc_weak;
mod recusive_type;
mod refcell_basics;
mod result_basics_fixed;
mod return_func_ref;
mod serde_demo;
mod solutions;
mod sync_channels;
mod thread_arc;
mod trait_objects;
mod word_counter;

fn main() -> Result<(), &'static str> {
    let s = vec!["apple", "mango", "banana"];
    let fourth = s.get(4).ok_or("I got only 3 fruits")?;
    Ok(())
}
